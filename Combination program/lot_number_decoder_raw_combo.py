"""
This program is used to automatically decode lot numbers that were generated by its partner program and output the input data
Property of Green Fox Plastics 
Created by Xavier Angus
"""

import tkinter as tk
import lot_number_functions

# Create the main window
root = tk.Tk()
root.title("GFP Lot Number Decoder")

# Create a text input field
lot_input = tk.Entry(root)
lot_input.config(justify=tk.CENTER, font=("Helvetica", 12))

#################################################################################
# Create a button
button = tk.Button(root, text="Decode Lot Number")

# Create a label for the output
output_label = tk.Label(root)
start_label = tk.Label(root)
start_label.config(text="Enter Lot Number", font=("Helvetica", 12))
result_label = tk.Label(root)
result_label.config(font=("Helvetica", 12))


# Define a function to be called when the button is clicked
def on_button_click():
    # Get the text entered in the text input field
    text = lot_input.get()
    
    # Set the text of the output label to the entered text
    text = text.upper()
    output_label.config(text=text)

    lotNumBin, palletEnd = lot_number_functions.getLotNum(text)
    #convert back to binary
    lotNum = lot_number_functions.decode(lotNumBin)
    #print(lotNum)
    #shred binary into individual parts
    splits = lot_number_functions.getSplit(lotNum)
#break tuple 'splits' into integers
    colorNum, sizeNum, lineNum, dateNum = splits

    dayNum, monthNum = lot_number_functions.getDate(dateNum)
    

    colorOut = lot_number_functions.getColorDecode(colorNum)
    #print('')
    boardOut = lot_number_functions.getBoardSizeDecode(sizeNum)
    lineNum = int(lineNum, 2)

    lineNum = str(lineNum)
    results = "Color: " + colorOut + "\nProfile: " + boardOut + "\nDate: " + monthNum + '/' + dayNum + "\nLine Number: " + lineNum + "\nPallet Num: " + palletEnd
    result_label.config(text = results)


# Set the command to be called when the button is clicked
button.config(font=("Helvetica", 12), command=on_button_click)

# Use the grid layout manager to arrange the widgets in the GUI
start_label.grid(row=0, column=0)
lot_input.grid(row=1, column=0)
button.grid(row=1, column=1)
output_label.grid(row=2, column=0, columnspan=2)
result_label.grid(row=3, column=0, columnspan=2)

# Start the main event loop
root.mainloop()
